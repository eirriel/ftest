---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
      state: present

  - name: Install docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl


  - name: Ensure kubelet file exists
    file:
      path: /etc/default/kubelet
      state: touch

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - pause:
      seconds: 5
# Master specific tasks

  - name: Initialize the Kubernetes cluster using kubeadm
    shell: kubeadm init --apiserver-advertise-address="192.168.20.10" --apiserver-cert-extra-sans="192.168.20.10"  --node-name k8s-master --pod-network-cidr="{{ pod_cidr }}" > /opt/kubeadm
    args:
      creates: '/opt/kubeadm'

  - name: Create .kube directory
    become: no
    file:
      path: $HOME/.kube
      state: directory

  - name: Copy admin config
    copy:
      remote_src: yes
      src: /etc/kubernetes/admin.conf
      dest: /home/vagrant/.kube/config
      owner: vagrant
      group: docker

  - name: Get Calico pod network
    become: false
    get_url:
      url: https://docs.projectcalico.org/v3.11/manifests/calico.yaml
      dest: $HOME/calico.yml

  - name: Set the pod cidr network
    become: false
    replace:
      path: $HOME/calico.yml
      regexp: '192\.168\.0\.0\/16'
      replace: "{{ pod_cidr }}"

  - name: Install calico pod network
    become: false
    shell: kubectl create -f $HOME/calico.yml > $HOME/calico-setup
    args:
      creates: '$HOME/calico-setup'

  - name: Generate join command
    shell: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    become: no
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

  - name: Copy admin.conf used by post script
    become: no
    fetch:
      src: "$HOME/.kube/config"
      dest: "./admin.conf"
      flat: yes

  - pause:
      seconds: 10

  handlers:
    - name: docker status
      service: name=docker state=started